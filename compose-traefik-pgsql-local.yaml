version: '3.8'

networks:
  zabbix-net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
          ip_range: 172.20.240.0/20

volumes:
  postgres_data:

services:
  traefik:
    image: "traefik"
    container_name: traefik
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - zabbix-net

  postgres:
    image: postgres:16-alpine
    container_name: zabbix-postgres
    restart: unless-stopped
    environment:
      # - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - zabbix-net

  zabbix-server-pgsql:
    image: zabbix/zabbix-server-pgsql:alpine-7.0-latest
    container_name: zabbix-server-pgsql
    restart: unless-stopped
    environment:
      - DB_SERVER_HOST=postgres
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    depends_on:
      - postgres
    ports:
      - "10051:10051"
    networks:
      - zabbix-net

  zabbix-web-nginx-pgsql:
    image: zabbix/zabbix-web-nginx-pgsql:alpine-7.0-latest
    container_name: zabbix-web-nginx-pgsql
    restart: unless-stopped
    environment:
      - DB_SERVER_HOST=postgres
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - ZBX_SERVER_HOST=zabbix-server-pgsql
      - PHP_TZ=${PHP_TZ}
    depends_on:
      - zabbix-server-pgsql
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.zabbix.rule=PathPrefix(`/`)"
      - "traefik.http.services.zabbix.loadbalancer.server.port=8080"
    networks:
      - zabbix-net
